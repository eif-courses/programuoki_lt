const i=JSON.parse('{"key":"v-53ef9093","path":"/zh/java/designpatterns.html","title":"Projektavimo šablonai","lang":"en-US","frontmatter":{"icon":"module","title":"Projektavimo šablonai","author":"M.Gžegoževskis","time":"2021-10-01T00:00:00.000Z","category":["Java"],"tag":["Programavimas","Java","Must to read"],"sticky":true,"star":true,"footer":"MIT Licensed | Copyright © 2021-present M. Gzegozevskis","description":"Dizaino modelis yra išbandytas sprendimas sprendžiant konkrečią problemą / užduotį.&nbsp;Pavyzdžiui, jei norite sukurti klasę, kuriai reikia sukurti tik vieną egzempliorių ir kad vieną objektą gali naudoti visos kitos klasės, naudokite „Singleton“ dizaino modelį.&nbsp; Dizaino modeliai yra nepriklausomi programavimo kalba, skirti bendroms objekto projektavimo problemoms spręsti.&nbsp;Dizainas yra idėja, o ne įgyvendinimas.&nbsp;Naudodamiesi dizaino modeliais, mes galime padaryti mūsų kodą lankstesnį, pakartotinį ir prieinamą.&nbsp; Rekomenduojamos knygos mokinantis projektavimo šablonus.","head":[["meta",{"property":"og:url","content":"https://www.programuoki.lt/zh/java/designpatterns.html"}],["meta",{"property":"og:site_name","content":"Programuoki.lt"}],["meta",{"property":"og:title","content":"Projektavimo šablonai"}],["meta",{"property":"og:description","content":"Dizaino modelis yra išbandytas sprendimas sprendžiant konkrečią problemą / užduotį.&nbsp;Pavyzdžiui, jei norite sukurti klasę, kuriai reikia sukurti tik vieną egzempliorių ir kad vieną objektą gali naudoti visos kitos klasės, naudokite „Singleton“ dizaino modelį.&nbsp; Dizaino modeliai yra nepriklausomi programavimo kalba, skirti bendroms objekto projektavimo problemoms spręsti.&nbsp;Dizainas yra idėja, o ne įgyvendinimas.&nbsp;Naudodamiesi dizaino modeliais, mes galime padaryti mūsų kodą lankstesnį, pakartotinį ir prieinamą.&nbsp; Rekomenduojamos knygos mokinantis projektavimo šablonus."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"M.Gžegoževskis"}],["meta",{"property":"article:tag","content":"Programavimas"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Must to read"}],["meta",{"property":"article:published_time","content":"2021-10-01T00:00:00.000Z"}]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.48,"words":443},"filePathRelative":"zh/java/designpatterns.md","excerpt":"<p><span style=\\"font-size: medium;\\">Dizaino modelis yra išbandytas sprendimas sprendžiant konkrečią problemą / užduotį.&nbsp;</span><span style=\\"font-size: medium;\\">Pavyzdžiui, jei norite sukurti klasę, kuriai reikia sukurti tik vieną egzempliorių ir kad vieną objektą gali naudoti visos kitos klasės, naudokite „Singleton“ dizaino modelį.&nbsp;</span>\\n    <span style=\\"font-size: medium;\\">Dizaino modeliai yra nepriklausomi programavimo kalba, skirti bendroms objekto projektavimo problemoms spręsti.&nbsp;</span><span style=\\"font-size: medium;\\">Dizainas yra idėja, o ne įgyvendinimas.&nbsp;</span><span style=\\"font-size: medium;\\">Naudodamiesi dizaino modeliais, mes galime padaryti mūsų kodą lankstesnį, pakartotinį ir prieinamą.&nbsp;</span>\\n        <span style=\\"font-size: medium;\\">Rekomenduojamos knygos mokinantis projektavimo šablonus.</span>\\n</p>","autoDesc":true}');export{i as data};
