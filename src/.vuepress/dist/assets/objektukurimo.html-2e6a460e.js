const n=JSON.parse('{"key":"v-19bce768","path":"/java/objektukurimo.html","title":"Objektų kūrimo šablonai","lang":"en-US","frontmatter":{"title":"Objektų kūrimo šablonai","author":"M.Gžegoževskis","time":"2021-10-01T00:00:00.000Z","category":["Java"],"tag":["Programavimas","Java"],"sticky":true,"star":true,"footer":"MIT Licensed | Copyright © 2021-present M. Gzegozevskis","description":"Šie projektavimo šablonai: Factory Pattern, Abstract Factory Pattern, Singleton Pattern, Prototype Pattern, Builder Pattern yra skirti objektams sukurti. Factory šablonas // Factory design pattern (projektavimo šablonas skirtas // nuslėpti objekto kūrimą naudojant getInstance metodą). interface Shop { void details(); } class Maxima implements Shop{ @Override public void details() { System.out.println(\\"Maxima prekybos centras\\"); } } class IKI implements Shop{ @Override public void details() { System.out.println(\\"Iki prekybos centras.\\"); } } class Norfa implements Shop{ @Override public void details() { System.out.println(\\"Norfa prekybos centras.\\"); } } class NezinomaParduotuve implements Shop{ @Override public void details() { System.out.println(\\"Nežinomas prekybos centras.\\"); } } class ShopFactory{ public Shop getInstance(String obj){ switch (obj) { case \\"Maxima\\": return new Maxima(); case \\"IKI\\": return new IKI(); case \\"Norfa\\": return new Norfa(); default: return new NezinomaParduotuve(); } } } public class Main { public static void main(String[] args) { ShopFactory shopFactory = new ShopFactory(); Shop shop = shopFactory.getInstance(\\"Maxima\\"); shop.details(); } }","head":[["meta",{"property":"og:url","content":"https://www.programuoki.lt/java/objektukurimo.html"}],["meta",{"property":"og:site_name","content":"Programuoki.lt"}],["meta",{"property":"og:title","content":"Objektų kūrimo šablonai"}],["meta",{"property":"og:description","content":"Šie projektavimo šablonai: Factory Pattern, Abstract Factory Pattern, Singleton Pattern, Prototype Pattern, Builder Pattern yra skirti objektams sukurti. Factory šablonas // Factory design pattern (projektavimo šablonas skirtas // nuslėpti objekto kūrimą naudojant getInstance metodą). interface Shop { void details(); } class Maxima implements Shop{ @Override public void details() { System.out.println(\\"Maxima prekybos centras\\"); } } class IKI implements Shop{ @Override public void details() { System.out.println(\\"Iki prekybos centras.\\"); } } class Norfa implements Shop{ @Override public void details() { System.out.println(\\"Norfa prekybos centras.\\"); } } class NezinomaParduotuve implements Shop{ @Override public void details() { System.out.println(\\"Nežinomas prekybos centras.\\"); } } class ShopFactory{ public Shop getInstance(String obj){ switch (obj) { case \\"Maxima\\": return new Maxima(); case \\"IKI\\": return new IKI(); case \\"Norfa\\": return new Norfa(); default: return new NezinomaParduotuve(); } } } public class Main { public static void main(String[] args) { ShopFactory shopFactory = new ShopFactory(); Shop shop = shopFactory.getInstance(\\"Maxima\\"); shop.details(); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"M.Gžegoževskis"}],["meta",{"property":"article:tag","content":"Programavimas"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2021-10-01T00:00:00.000Z"}]]},"headers":[{"level":2,"title":"Factory šablonas","slug":"factory-sablonas","link":"#factory-sablonas","children":[]},{"level":2,"title":"Abstract Factory šablonas","slug":"abstract-factory-sablonas","link":"#abstract-factory-sablonas","children":[]},{"level":2,"title":"Singleton šablonas","slug":"singleton-sablonas","link":"#singleton-sablonas","children":[]},{"level":2,"title":"Prototype šablonas","slug":"prototype-sablonas","link":"#prototype-sablonas","children":[]},{"level":2,"title":"Builder šablonas","slug":"builder-sablonas","link":"#builder-sablonas","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.37,"words":1010},"filePathRelative":"java/objektukurimo.md","excerpt":"<p>Šie projektavimo šablonai: Factory Pattern, Abstract Factory Pattern, Singleton Pattern, Prototype Pattern, Builder Pattern yra skirti objektams sukurti.</p>\\n<h2> Factory šablonas</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// Factory design pattern (projektavimo šablonas skirtas</span>\\n<span class=\\"token comment\\">// nuslėpti objekto kūrimą naudojant getInstance metodą).</span>\\n\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Shop</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">details</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Maxima</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Shop</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token annotation punctuation\\">@Override</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">details</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Maxima prekybos centras\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">IKI</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Shop</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token annotation punctuation\\">@Override</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">details</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Iki prekybos centras.\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Norfa</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Shop</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token annotation punctuation\\">@Override</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">details</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Norfa prekybos centras.\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">NezinomaParduotuve</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Shop</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token annotation punctuation\\">@Override</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">details</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Nežinomas prekybos centras.\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">ShopFactory</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Shop</span> <span class=\\"token function\\">getInstance</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> obj<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">switch</span> <span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">case</span> <span class=\\"token string\\">\\"Maxima\\"</span><span class=\\"token operator\\">:</span>\\n<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Maxima</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">case</span> <span class=\\"token string\\">\\"IKI\\"</span><span class=\\"token operator\\">:</span>\\n<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">IKI</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">case</span> <span class=\\"token string\\">\\"Norfa\\"</span><span class=\\"token operator\\">:</span>\\n<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Norfa</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span>\\n<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">NezinomaParduotuve</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Main</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token class-name\\">ShopFactory</span> shopFactory <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ShopFactory</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">Shop</span> shop <span class=\\"token operator\\">=</span> shopFactory<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getInstance</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Maxima\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nshop<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">details</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
