import{ab as a,M as p,N as t,L as n,$ as o,ac as s}from"./framework-b36c0771.js";const e={},c=n("h3",{id:"kolekciju-karkasas-arba-duomenu-strukturos",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#kolekciju-karkasas-arba-duomenu-strukturos","aria-hidden":"true"},"#"),o(" Kolekcijų karkasas arba duomenų struktūros")],-1),i=n("p",null,'Kolekcija - tai duomenų saugykla (panaudojimo prasme). Kolekcija – tai atitinkamą kolekcijos interfeisą (sąsają) įdiegiančios klasės objektas (programavimo prasme). Kolekcija – tai dinaminis masyvas: gali "augti" tiek, kiek reikia (apimtis neribojama); gali mažėti iki tuščios. Kolekcija gali talpinti įvairių tipų objektus (tik objektus!). Pagal ideologiją panašu C++ naudojamą Standard Template Library (STL).',-1),l=n("iframe",{width:"100%",height:"400",src:"https://www.youtube.com/embed/waAhXFW_kwY",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),u=s('<h3 id="kolekciju-privalumai" tabindex="-1"><a class="header-anchor" href="#kolekciju-privalumai" aria-hidden="true">#</a> Kolekcijų privalumai</h3><ul><li>Supaprastina programavimo procesą, kadangi yra pateikiamos dažniausiai naudojamos duomenų struktūros ir algoritmai, kurių nereikia realizuoti atskirai.</li><li>Paspartina naudojamų duomenų struktūrų ir algoritmų darbą, kadangi sukurtas karkasas yra gerai suprojektuotas.</li><li>Suteikia sąveiką tarp nesusijusių API’s, sukuriant bendrą kalbą kolekcijoms perduoti pirmyn ir atgal.</li></ul><p>Kolekcijų karkaso klasių hierarchija (žr. 1.8 pav.) nuo JDK 1.5 kadangi buvo perrašytas naudojant generics tipus, taip apsaugant nuo pagrindinės problemos ClassCastException. 1.8 paveikslėlyje pateiktas supaprastintoss kolekcijų karkaso hierarchijos vaizdas išėmus tarpines abstrakčias klases, kurias galima surasti oficialiojoje dokumentacijoje. Programuotojui užtenka žinoti kokios duomenų struktūros ir kokie interfeisai sudaro šį kolekcijų karkasą. Detalesnį sąrašą peržiūrėti reikia tuo atveju jeigu norime sukurti savo asmenines kolekcijas.</p><figure><img src="https://github.com/eif-courses/moodle-java/blob/master/Collections interfeisas Java.png?raw=true" alt="Collections interfeisas Java.png" tabindex="0" loading="lazy"><figcaption>Collections interfeisas Java.png</figcaption></figure><p>1.8 pav. Kolekcijų karkasas</p><p>Kolekcijų karkasas neturi kai kurių klasių pavyzdžiui duomenų struktūros map šios duomenų struktūros interfeisas yra sukurtas atskirai nuo kolekcijų karkaso (žr. 1.9 pav.).</p><figure><img src="https://github.com/eif-courses/moodle-java/blob/master/Map interfeisas Java.png?raw=true" alt="Map interfeisas Java.png" tabindex="0" loading="lazy"><figcaption>Map interfeisas Java.png</figcaption></figure><p>1.9 pav. Map interfeiso hierarchija</p>',8),k=n("iframe",{width:"100%",height:"400",src:"https://www.youtube.com/embed/0DARrcpyLsc",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),r=s(`<p>Ši duomenų struktūra sudaryta iš rakto (angl. key) - K ir reikšmės (angl. value) - V. Tai nusako rakto ir reikšmės saugojimą atmintyje pagal. kurių porą yra patogu užrašyti duomenis turinčius didelius teksto fragmentus. Turint tokią duomenų struktūrą yra daug paprasčiau atlikti paiešką pagal raktinį žodį. Realaus gyvenimo pavyzdys tai facebook #-hashtag pagal, kuriuos yra surandami ir atvaizduojami visi paskelbti straipsniai su paminėtu raktiniu žodžiu.</p><h3 id="comparable-ir-comparator-interfeisu-skirtumas-ir-paskirtis" tabindex="-1"><a class="header-anchor" href="#comparable-ir-comparator-interfeisu-skirtumas-ir-paskirtis" aria-hidden="true">#</a> Comparable ir Comparator interfeisų skirtumas ir paskirtis.</h3><p>Kadangi kolekcijų karkasas yra objektų rinkiniai su kuriais įprastai yra naudojami pagrindiniai metodai, kurie yra aprašyti klasėse: Arrays arba Collections, taip pat galima turėti ir filtrus norint išrinkti informaciją iš esamų rinkinių. Skirtumas tarp šių dviejų interfeisų:</p><ul><li>Comparable interfeisas yra skirtas duomenų rūšiavimui viena išdėstymo tvarka, o Comparator interfeisas gali būti naudojamas duomenų rinkinius rūšiuoti keliomis skirtingomis kryptimis.</li><li>Naudoti Comparable interfeisą reikia jį reikia įgyvendinti, kur naudojant Comparator nereikia atlikti jokių pakeitimų.</li><li>Comparable interfeisas yra įgyvendintas java.lang klasių kataloge, Comparator yra kitame java.util kataloge.</li><li>Nereikia jokio kodo pakeitimų kliento kodo pusėje naudojant Comparable Arrays.sort() arba Collections.sort() metodus, kurie automatiškai naudoja compareTo() metodus prisitaikant prie tos klasės tipo. Naudojant Comparator klientas privalo aprašyti metodą compare().</li></ul><p>Pavyzdžiui turime įprastą sandėlį, kuriame yra sudėtos įvairios dėžės skirtingų tipų/rūšių: Auksinė, Celofaninė, Sidabrinė, Medinė ir kt. Užduotis surūšiuoti sandėlyje esančias dėžes pagal svorį didėjimo tvarka. Tada programiškai reikėtų aprašyti taip: sukurti kolekciją <code>java ArrayList&lt;Deze&gt;</code>, joje patalpinti dėžės tipo objektus, aprašyti metodą compare() pagal kokį filtrą rūšiuosime dėžes, šiam tikslui pasiekti naudosime Comparator interfeisą kaip anoniminę klasę:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">class</span> <span class="token class-name">Deze</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> tipas<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> svoris<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token class-name">Deze</span><span class="token punctuation">(</span><span class="token class-name">String</span> tipas<span class="token punctuation">,</span> <span class="token keyword">int</span> svoris<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tipas <span class="token operator">=</span> tipas<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>svoris <span class="token operator">=</span> svoris<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTipas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> tipas<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSvoris</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> svoris<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Deze{&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;tipas=&#39;&quot;</span> <span class="token operator">+</span> tipas <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
        <span class="token string">&quot;, svoris=&quot;</span> <span class="token operator">+</span> svoris <span class="token operator">+</span>
        <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Deze</span><span class="token punctuation">&gt;</span></span> sandelys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sandelys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Deze</span><span class="token punctuation">(</span><span class="token string">&quot;Auksinė&quot;</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sandelys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Deze</span><span class="token punctuation">(</span><span class="token string">&quot;Stiklinė&quot;</span><span class="token punctuation">,</span> <span class="token number">599</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sandelys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Deze</span><span class="token punctuation">(</span><span class="token string">&quot;Plastikinė&quot;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sandelys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Deze</span><span class="token punctuation">(</span><span class="token string">&quot;Celofaninė&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sandelys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Deze</span><span class="token punctuation">(</span><span class="token string">&quot;Medinė&quot;</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Comparator kaip anoniminė klasė iki 1.7 JDK be lambda išraiškų</span>
    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Deze</span><span class="token punctuation">&gt;</span></span> pagalSvori <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Deze</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Deze</span> o1<span class="token punctuation">,</span> <span class="token class-name">Deze</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">getSvoris</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> o2<span class="token punctuation">.</span><span class="token function">getSvoris</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// Comparator įvedūs lambda išraiškas nuo 1.8 analogiškai pagal didėjimo tvarką rūšiuoja elementus</span>
    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Deze</span><span class="token punctuation">&gt;</span></span> pagalSvori2Budas <span class="token operator">=</span> <span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o1<span class="token punctuation">.</span><span class="token function">getSvoris</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> o2<span class="token punctuation">.</span><span class="token function">getSvoris</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Comparator įvestas naujas metodas nuo 1.8 JDK supaprastėjo užrašymas</span>
    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Deze</span><span class="token punctuation">&gt;</span></span> pagalSvori3Budas <span class="token operator">=</span> <span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span><span class="token class-name">Deze</span><span class="token operator">::</span><span class="token function">getSvoris</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 2 būdai kaip rikiuoti sandelyje esančias dėžes pagal numatytą tvarką šiuo atveju didėjimo.</span>
    <span class="token comment">// Comparator objektas yra paprasčiausias filtras</span>
    sandelys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>pagalSvori<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//analogiškai Collections.sort(sandelys, pagalSvori);</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Pagal dėžės svorį didėjimo tvarka:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Deze</span> deze<span class="token operator">:</span> sandelys<span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>deze<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Filtras skirtas surikiuoti elementus pagal dėžės tipą didėjimo tvarka</span>
    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Deze</span><span class="token punctuation">&gt;</span></span> dezesTipas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Deze</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Deze</span> e1<span class="token punctuation">,</span> <span class="token class-name">Deze</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> e1<span class="token punctuation">.</span><span class="token function">getTipas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>e2<span class="token punctuation">.</span><span class="token function">getTipas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    sandelys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>dezesTipas<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Pagal dėžės tipą didėjimo tvarka:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Deze</span> deze<span class="token operator">:</span> sandelys<span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>deze<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//Įvykdžius programinį kodą į ekraną išves dėžės svorį didėjimo tvarka:</span>

<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span>&#39;<span class="token class-name">Celofanin</span>ė&#39;<span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span>&#39;<span class="token class-name">Plastikin</span>ė&#39;<span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span><span class="token char">&#39;Medinė&#39;</span><span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">68</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span>&#39;<span class="token class-name">Auksin</span>ė&#39;<span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span>&#39;<span class="token class-name">Stiklin</span>ė&#39;<span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">599</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Pastaba! compare() metodą galima aprašyti ir pagal individualų poreikį. Elementų tvarka taip pat gali būti didėjimo ar mažėjimo vėliau apžvelgsime kaip parašyti rūšiavima pagal 2 ir daugiau parametrų.Kaip veikia rūšiavimas labai paprastai jeigu rezultatas o1.getSvoris() - o2.getSvoris() yra lygus:</span>

<span class="token comment">// 0 - reiškia jog abu elementai yra lygūs.</span>
<span class="token comment">// 1 ir daugiau - reiškia jog elementas yra didesnis už lyginamą elementą.</span>
<span class="token comment">// -1 ir mažiau - reiškia jog elementas yra mažesnis už lyginimą elemetą.</span>

<span class="token comment">//Norint surikiuoti elementus pagal kitą parametrą t.y. objektą naudosime tą patį prieš tai pateiktą pavyzdį, kuriame buvo rikiuojamos dėžės esančios sandėlyje pagal svorį. Šį kartą tikiuosime pagal tos dėžės tipą. Kadangi parametras yra nuorodos (angl. reference) tipo return dalyje naudosime compareTo() metodą skirtą palyginti objektus tarpusavyje pagal dėžės tipą. </span>
<span class="token comment">// Įvykdžius programinį kodą su naujai parašytų filtru dezesTipas į ekraną bus išvestas dėžės tipas didėjimo tvarka:</span>

<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span>&#39;<span class="token class-name">Auksin</span>ė&#39;<span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span>&#39;<span class="token class-name">Celofanin</span>ė&#39;<span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span><span class="token char">&#39;Medinė&#39;</span><span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">68</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span>&#39;<span class="token class-name">Plastikin</span>ė&#39;<span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Deze</span><span class="token punctuation">(</span>tipas<span class="token operator">=</span>&#39;<span class="token class-name">Stiklin</span>ė&#39;<span class="token punctuation">,</span> svoris<span class="token operator">=</span><span class="token number">599</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Laikantis tvarkingo kodo rašymo norint turėtį filtrus pagal paskirtį reikėtų duotą filtrą aprašyti toje klasėje, kurios tipo duomenis ir rūšiuosime. </span>
<span class="token comment">//Pavyzdžiui turime situaciją realiame gyvenime turime sąrašus sudarytus iš asmenų su papildoma informacija. Programiškai reikia sukurti objektą Asmuo ir Main metodą, kuriame patikrinsime realizuotą programą. </span>
<span class="token comment">// Tikslas surūšiuoti asmenis pagal vardą, atlyginimą arba pagal abu laukus pagal atlyginimą ir pagal vardą.</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Comparator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Asmuo</span><span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> vardas<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">double</span> atlyginimas<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">Asmuo</span><span class="token punctuation">(</span><span class="token class-name">String</span> vardas<span class="token punctuation">,</span> <span class="token keyword">double</span> atlyginimas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vardas <span class="token operator">=</span> vardas<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>atlyginimas <span class="token operator">=</span> atlyginimas<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getVardas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> vardas<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getAtlyginimas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> atlyginimas<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Aprašomi įvairūs filtrai susiiję su Asmens klase nuo JDK 1.7</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Asmuo</span><span class="token punctuation">&gt;</span></span> asmuoPagalVarda <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Asmuo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Asmuo</span> o1<span class="token punctuation">,</span> <span class="token class-name">Asmuo</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">getVardas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2<span class="token punctuation">.</span><span class="token function">getVardas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Asmuo</span><span class="token punctuation">&gt;</span></span> asmuoPagalAtlyginima <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Asmuo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Asmuo</span> o1<span class="token punctuation">,</span> <span class="token class-name">Asmuo</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>o1<span class="token punctuation">.</span><span class="token function">getAtlyginimas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>o2<span class="token punctuation">.</span><span class="token function">getAtlyginimas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Asmuo</span><span class="token punctuation">&gt;</span></span> pagalAtlyginimaIrVarda <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Asmuo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Asmuo</span> o1<span class="token punctuation">,</span> <span class="token class-name">Asmuo</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>o1<span class="token punctuation">.</span><span class="token function">getAtlyginimas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>o2<span class="token punctuation">.</span><span class="token function">getAtlyginimas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        flag <span class="token operator">=</span> o1<span class="token punctuation">.</span><span class="token function">getVardas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2<span class="token punctuation">.</span><span class="token function">getVardas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> flag<span class="token punctuation">;</span> <span class="token comment">// flag tai laikinasis kintamasis pagal, kurį pritaikome antrą filtrą pagal vardą</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Asmuo{&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;vardas=&#39;&quot;</span> <span class="token operator">+</span> vardas <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
        <span class="token string">&quot;, atlyginimas=&quot;</span> <span class="token operator">+</span> atlyginimas <span class="token operator">+</span>
        <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Asmuo</span><span class="token punctuation">&gt;</span></span> asmenys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    asmenys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Asmuo</span><span class="token punctuation">(</span><span class="token string">&quot;Darius&quot;</span><span class="token punctuation">,</span> <span class="token number">2200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    asmenys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Asmuo</span><span class="token punctuation">(</span><span class="token string">&quot;Marius&quot;</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    asmenys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Asmuo</span><span class="token punctuation">(</span><span class="token string">&quot;Andrius&quot;</span><span class="token punctuation">,</span> <span class="token number">1888</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    asmenys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Asmuo</span><span class="token punctuation">(</span><span class="token string">&quot;Tomas&quot;</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    asmenys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Asmuo</span><span class="token punctuation">(</span><span class="token string">&quot;Arnas&quot;</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    asmenys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Asmuo</span><span class="token punctuation">(</span><span class="token string">&quot;Tomas&quot;</span><span class="token punctuation">,</span> <span class="token number">4444</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Sukurto filtro naudojant Comparator interfeisą filtras pagal asmens vardą</span>
    asmenys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Asmuo</span><span class="token punctuation">.</span>asmuoPagalVarda<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Asmuo pagal vardą didėjimo tvarka:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Asmuo</span> asmuo <span class="token operator">:</span> asmenys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>asmuo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Sukurto filtro naudojant Comparator interfeisą filtras pagal asmens atlyginimą</span>
    asmenys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Asmuo</span><span class="token punctuation">.</span>asmuoPagalAtlyginima<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Asmuo pagal atlyginimą didėjimo tvarka:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Asmuo</span> asmuo <span class="token operator">:</span> asmenys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>asmuo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Sukurto filtro naudojant Comparator interfeisą filtras pagal asmens atlyginimą ir pagal vardą</span>
    asmenys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Asmuo</span><span class="token punctuation">.</span>pagalAtlyginimaIrVarda<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Asmuo pagal atlyginimą ir pagal vardą didėjimo tvarka:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Asmuo</span> asmuo <span class="token operator">:</span> asmenys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>asmuo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// REZULTATAS BUS IŠVESTAS EKRANĄ</span>
<span class="token class-name">Asmuo</span> pagal vardą didėjimo tvarka<span class="token operator">:</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span>&#39;<span class="token class-name">Andrius</span>&#39;<span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1888.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Arnas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Darius&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">2200.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Marius&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Tomas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Tomas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">4444.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Asmuo</span> pagal atlyginimą didėjimo tvarka<span class="token operator">:</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Arnas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Marius&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Tomas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span>&#39;<span class="token class-name">Andrius</span>&#39;<span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1888.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Darius&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">2200.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Tomas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">4444.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Asmuo</span> pagal atlyginimą ir pagal vardą didėjimo tvarka<span class="token operator">:</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Arnas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Marius&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Tomas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1500.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span>&#39;<span class="token class-name">Andrius</span>&#39;<span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">1888.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Darius&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">2200.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Asmuo</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Tomas&#39;</span><span class="token punctuation">,</span> atlyginimas<span class="token operator">=</span><span class="token number">4444.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Comparable interfeisas yra ribotas jį galima rasti java.lang pakete. Kadangi vartotojas privalo aprašyti metodą compareTo() šiame metode galima aprašyti tik vienos sekos rūšiavimą pagal kažkurį objekto parametrą. </span>
<span class="token comment">// Žemiau bus pateiktas programinio kodas, kuriame bus rūšiuojami Studentai pagal amžių.</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Studentas</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Studentas</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token class-name">String</span> vardas<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> amzius<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">Studentas</span><span class="token punctuation">(</span><span class="token class-name">String</span> vardas<span class="token punctuation">,</span> <span class="token keyword">int</span> amzius<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vardas <span class="token operator">=</span> vardas<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>amzius <span class="token operator">=</span> amzius<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getVardas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> vardas<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAmzius</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> amzius<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Aprašomas filtras rūšiavimui pagal amžių</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Studentas</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>amzius <span class="token operator">==</span> o<span class="token punctuation">.</span>amzius<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>amzius <span class="token operator">&lt;</span> o<span class="token punctuation">.</span>amzius<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Studentas{&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;vardas=&#39;&quot;</span> <span class="token operator">+</span> vardas <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
        <span class="token string">&quot;, amzius=&#39;&quot;</span> <span class="token operator">+</span> amzius <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
        <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Studentas</span><span class="token punctuation">&gt;</span></span> studentai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    studentai<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Studentas</span><span class="token punctuation">(</span><span class="token string">&quot;Jonas&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    studentai<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Studentas</span><span class="token punctuation">(</span><span class="token string">&quot;Ona&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    studentai<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Studentas</span><span class="token punctuation">(</span><span class="token string">&quot;Petras&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    studentai<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Studentas</span><span class="token punctuation">(</span><span class="token string">&quot;Kazimieras&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Rūšiuojama pagal amžių naudojant Comparable interfeisą</span>
    <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>studentai<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Studentų sąrašas pagal amžių mažėjimo tvarka:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Studentas</span> studentas <span class="token operator">:</span> studentai<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>studentas<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

Į ekraną bus išvestas <span class="token class-name">Student</span>ų sąrašas pagal amžių mažėjimo tvarka<span class="token operator">:</span>
<span class="token class-name">Studentas</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Jonas&#39;</span><span class="token punctuation">,</span> amzius<span class="token operator">=</span><span class="token char">&#39;25&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Studentas</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Petras&#39;</span><span class="token punctuation">,</span> amzius<span class="token operator">=</span><span class="token char">&#39;19&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Studentas</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span>&#39;<span class="token class-name">Kazimieras</span>&#39;<span class="token punctuation">,</span> amzius<span class="token operator">=</span><span class="token char">&#39;19&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Studentas</span><span class="token punctuation">(</span>vardas<span class="token operator">=</span><span class="token char">&#39;Ona&#39;</span><span class="token punctuation">,</span> amzius<span class="token operator">=</span><span class="token char">&#39;18&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Savarankiškai dar kartą peržiūrėkite pavyzdžius. Pabandykite sukurti savo asmeninį filtrą naudojant Comparator ar Comparable interfeisą.</p>`,7),d=[c,i,l,u,k,r];function m(v,b){return p(),t("div",null,d)}const y=a(e,[["render",m],["__file","kolekcijos.html.vue"]]);export{y as default};
