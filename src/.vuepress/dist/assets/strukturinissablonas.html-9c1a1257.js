const n=JSON.parse('{"key":"v-3e209103","path":"/java/strukturinissablonas.html","title":"Struktūriniai šablonai","lang":"en-US","frontmatter":{"title":"Struktūriniai šablonai","author":"M.Gžegoževskis","time":"2021-10-01T00:00:00.000Z","category":["Java"],"tag":["Programavimas","Java"],"sticky":true,"star":true,"footer":"MIT Licensed | Copyright © 2021-present M. Gzegozevskis","description":"Adapter Pattern, Bridge Pattern, Composite Pattern, Decorator Pattern, Facade Pattern, Flyweight Pattern, Proxy Pattern. Adapter šablonas interface Player { public void play(String type, String fileName); } interface AudioPlayer { public void playAudio(String fileName); } interface VideoPlayer { public void playVideo(String fileName); } class MyAudioPlayer implements AudioPlayer { @Override public void playAudio(String fileName) { System.out.println(\\"Playing. Name: \\"+ fileName); } } class MyVideoPlayer implements VideoPlayer { @Override public void playVideo(String fileName) { System.out.println(\\"Playing. Name: \\"+ fileName); } } class MyPlayer implements Player { AudioPlayer audioPlayer = new MyAudioPlayer(); VideoPlayer videoPlayer = new MyVideoPlayer(); public MyPlayer(){ } @Override public void play(String audioType, String fileName) { if(audioType.equalsIgnoreCase(\\"avi\\")){ videoPlayer.playVideo(fileName); }else if(audioType.equalsIgnoreCase(\\"mp3\\")){ audioPlayer.playAudio(fileName); } } } public class Main{ public static void main(String[] args) { MyPlayer myPlayer = new MyPlayer(); myPlayer.play(\\"mp3\\", \\"h.mp3\\"); myPlayer.play(\\"avi\\", \\"me.avi\\"); } }","head":[["meta",{"property":"og:url","content":"https://www.programuoki.lt/java/strukturinissablonas.html"}],["meta",{"property":"og:site_name","content":"Programuoki.lt"}],["meta",{"property":"og:title","content":"Struktūriniai šablonai"}],["meta",{"property":"og:description","content":"Adapter Pattern, Bridge Pattern, Composite Pattern, Decorator Pattern, Facade Pattern, Flyweight Pattern, Proxy Pattern. Adapter šablonas interface Player { public void play(String type, String fileName); } interface AudioPlayer { public void playAudio(String fileName); } interface VideoPlayer { public void playVideo(String fileName); } class MyAudioPlayer implements AudioPlayer { @Override public void playAudio(String fileName) { System.out.println(\\"Playing. Name: \\"+ fileName); } } class MyVideoPlayer implements VideoPlayer { @Override public void playVideo(String fileName) { System.out.println(\\"Playing. Name: \\"+ fileName); } } class MyPlayer implements Player { AudioPlayer audioPlayer = new MyAudioPlayer(); VideoPlayer videoPlayer = new MyVideoPlayer(); public MyPlayer(){ } @Override public void play(String audioType, String fileName) { if(audioType.equalsIgnoreCase(\\"avi\\")){ videoPlayer.playVideo(fileName); }else if(audioType.equalsIgnoreCase(\\"mp3\\")){ audioPlayer.playAudio(fileName); } } } public class Main{ public static void main(String[] args) { MyPlayer myPlayer = new MyPlayer(); myPlayer.play(\\"mp3\\", \\"h.mp3\\"); myPlayer.play(\\"avi\\", \\"me.avi\\"); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"M.Gžegoževskis"}],["meta",{"property":"article:tag","content":"Programavimas"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2021-10-01T00:00:00.000Z"}]]},"headers":[{"level":2,"title":"Adapter šablonas","slug":"adapter-sablonas","link":"#adapter-sablonas","children":[]},{"level":2,"title":"Bridge šablonas","slug":"bridge-sablonas","link":"#bridge-sablonas","children":[]},{"level":2,"title":"Composite šablonas","slug":"composite-sablonas","link":"#composite-sablonas","children":[]},{"level":2,"title":"Composite 2 pavyzdys","slug":"composite-2-pavyzdys","link":"#composite-2-pavyzdys","children":[]},{"level":2,"title":"Decorator šablonas","slug":"decorator-sablonas","link":"#decorator-sablonas","children":[]},{"level":2,"title":"Facade šablonas","slug":"facade-sablonas","link":"#facade-sablonas","children":[]},{"level":2,"title":"Proxy šablonas","slug":"proxy-sablonas","link":"#proxy-sablonas","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.31,"words":994},"filePathRelative":"java/strukturinissablonas.md","excerpt":"<p>Adapter Pattern, Bridge Pattern, Composite Pattern, Decorator Pattern, Facade Pattern, Flyweight Pattern, Proxy Pattern.</p>\\n<h2> Adapter šablonas</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Player</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">play</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> type<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> fileName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">AudioPlayer</span> <span class=\\"token punctuation\\">{</span>  \\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">playAudio</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> fileName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">VideoPlayer</span> <span class=\\"token punctuation\\">{</span>  \\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">playVideo</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> fileName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyAudioPlayer</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">AudioPlayer</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token annotation punctuation\\">@Override</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">playAudio</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> fileName<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Playing. Name: \\"</span><span class=\\"token operator\\">+</span> fileName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>    \\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyVideoPlayer</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">VideoPlayer</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token annotation punctuation\\">@Override</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">playVideo</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> fileName<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Playing. Name: \\"</span><span class=\\"token operator\\">+</span> fileName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>    \\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyPlayer</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Player</span> <span class=\\"token punctuation\\">{</span>\\n\\n<span class=\\"token class-name\\">AudioPlayer</span> audioPlayer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">MyAudioPlayer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">VideoPlayer</span> videoPlayer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">MyVideoPlayer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">MyPlayer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>      \\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token annotation punctuation\\">@Override</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">play</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> audioType<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> fileName<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>audioType<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equalsIgnoreCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"avi\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\nvideoPlayer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">playVideo</span><span class=\\"token punctuation\\">(</span>fileName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>audioType<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equalsIgnoreCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"mp3\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\naudioPlayer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">playAudio</span><span class=\\"token punctuation\\">(</span>fileName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Main</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token class-name\\">MyPlayer</span> myPlayer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">MyPlayer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n      myPlayer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">play</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"mp3\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"h.mp3\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      myPlayer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">play</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"avi\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"me.avi\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
