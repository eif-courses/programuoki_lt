import{ab as e,M as p,N as o,L as s,$ as a,W as t,ac as i,a1 as l}from"./framework-b36c0771.js";const c={},u=s("p",null,[s("strong",null,"Static ir local tipų kintamųjų palyginimas."),a(" Statiniai kintamieji naudojami tuo atveju, kai jums nėra svarbu turėti klasės egzempliorių t.y. kai jūs norite turėti kintamąjį bendrą visiems klasės egzemplioriams, taip yra sutaupoma atmintis, bet ši atmintis yra išskiriama ir naudojama visą programos vykdymo metu, žr. Į žemiau pateiktą programinį kodą. Dešinėje pusėjė yra pateikta klasė Skaiciuokle, kurioje yra du statiniai kintamieji: bendras ir kiekObjektuSukureme, taip pat pateikta funkcija sumuoti(), kuri didina reikšmę sumuodama 10 prie lokalus ir bendras kintamųjų, taip pat pateiktas konstruktorius Skaiciuokle(), kuriame yra didinama reikšmė vienetu kiekObjektuSukureme.")],-1),k=s("iframe",{width:"100%",height:"400",src:"https://www.youtube.com/embed/baIgY72e_lg",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),r={href:"https://vma-test.viko.lt/mod/glossary/showentry.php?eid=32&displayformat=dictionary",title:"Terminų ir santrumpų žodynas: Java",target:"_blank",rel:"noopener noreferrer"},d=i(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">int</span> bendras<span class="token punctuation">;</span>
  <span class="token keyword">int</span> lokalus<span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token keyword">int</span> kiekObjektuSukureme<span class="token punctuation">;</span>
  
  <span class="token keyword">public</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    kiekObjektuSukureme<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sumuoti</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    bendras<span class="token operator">+=</span><span class="token number">10</span><span class="token punctuation">;</span>
    lokalus<span class="token operator">+=</span><span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getBendras</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Bendras: &quot;</span><span class="token operator">+</span>bendras<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> bendras<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getLokalus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Lokalus: &quot;</span><span class="token operator">+</span>lokalus<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> bendras<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Skaiciuokle</span> sk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Skaiciuokle</span> sk2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sk<span class="token punctuation">.</span><span class="token function">sumuoti</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sk2<span class="token punctuation">.</span><span class="token function">sumuoti</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sk<span class="token punctuation">.</span><span class="token function">getBendras</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// REIKŠMĖ bendras 20</span>
    sk<span class="token punctuation">.</span><span class="token function">getLokalus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// REIKŠMĖ lokalus 10</span>
    sk<span class="token punctuation">.</span><span class="token function">getKiekObjektuSukureme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// kiekObjektuSukureme = 2</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Prieš tai pateikto kodo fragmentą galima iliustruoti (žr. 1.6 pav.). Kadangi statinis kintamasis yra bendras atmintyje todėl nėra prasmės kurti atskirus to tipo objekto egzempliorius pvz: sk ir sk2 nes mes galime tiesiogiai pasiekti naudojant klasės pavadinimą Skaiciuokle nes jai ir priklausys šis static int bendras; kintamasis. Lokalaus atveju kiekvienas egzempliorius įgyja unikalią nuorodą (vietą atmintyje) kur išsaugo savo kopiją int lokalus ir atitinkamai priklauso tik jam.</p><figure><img src="https://github.com/eif-courses/moodle-java/blob/master/statinisVSlokalus.jpg?raw=true" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>1.6 pav. Statinio ir lokalaus kintamojo atvaizdavimas atmintyje.</p><p><strong>Skirtumas tarp statinio ir nestatinio medodų.</strong> Pagrindinis skirtumas toks jog statinis metodas priklauso tik tai klasei, kurioje jis yra apibrėžtas. Paveldėjus bet, kurią klasę, kurioje yra statinių metodų, visi metodai su raktiniu žodžiu static nebus paveldimi. Nereikia kurti klasės objekto / egzemplioriaus, kad jį įvykdyti užtenka nurodyti klasės vardą ir metodo pavadinimą pvz: pieš tai turėjome klasę Skaiciuokle, kurioje apibrėžtas metodas:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">skaiciuotiSuma</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Suma&quot;</span><span class="token operator">+</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Statinių metodų vykdymas kaip ir įprastinės klasės, nurodant nuorodą (Klasės_pav.metodas arba Klasės_pav.kintamasis). Skirtumas toks jog statiniai metodai neturi klasės egzempliorių, todėl jums pakanka nurodyti klasės pavadinimą ir kreipinį į norimą metodą pvz: Skaiciuokle.skaiciuotiSuma(20, 45). Kaip matome žemiau pateiktas kodo fragmentas, kuriame matome, kad įprastinio metodo iškvietimas yra galimas tik tuo atveju, kai yra sukuriamas objektas / klasės egzempliorius Skaiciuokle sk = new Skaiciuokle(); tik tada mes galyme vykdyti sk.sumuoti();</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
    
    <span class="token class-name">Skaiciuokle</span><span class="token punctuation">.</span><span class="token function">skaiciuotiSuma</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// A + B REZULTATAS = 65</span>
    
    <span class="token class-name">Skaiciuokle</span> sk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Skaiciuokle</span> sk2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sk<span class="token punctuation">.</span><span class="token function">sumuoti</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sk2<span class="token punctuation">.</span><span class="token function">sumuoti</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Taip pat reikėtų žinoti jog static metodai gali vykdyti tik statinius kintamuosius ir metodus. Pateiktas kodo fragmentas iš klasės Skaiciuokle ir static metodo pakeltiKvadratuSuma() realizacija, kuriame negalime iškviesti nestatinių (angl. non-static) metodų ir kintamųjų, priešingai su nestatiniais (angl. non-static) metodais, kuriuose galima vykdyti static ir non-static metodus. Norint iškviesti nestatinį metodą ar kintamąjį yra tik vienas būdas sukurti klasės objektą / egzempliorių, tada galėsite naudoti lokalius metodus ir kintamuosius.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">int</span> bendras<span class="token punctuation">;</span>
  <span class="token keyword">int</span> lokalus<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">skaiciuotiSuma</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Suma: &quot;</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getBendras</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Bendras: &quot;</span><span class="token operator">+</span>bendras<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> bendras<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">pakeltiKvadratuSuma</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Skaiciuokle</span> sk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    skaiciuokle<span class="token punctuation">.</span><span class="token function">getBendras</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">skaiciuotiSuma</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),m={href:"https://vma-test.viko.lt/mod/glossary/showentry.php?eid=32&displayformat=dictionary",title:"Terminų ir santrumpų žodynas: Java",target:"_blank",rel:"noopener noreferrer"},v=i(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">{</span>
  <span class="token keyword">static</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Statinis blokas įvykdytas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token class-name">KONSTANTA</span> <span class="token number">59545</span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token keyword">int</span> bendras<span class="token punctuation">;</span>
  <span class="token keyword">int</span> lokalus<span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token keyword">int</span> kiekObjektuSukureme<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token class-name">Skaiciuokle</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    kiekobjektuSukureme<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Konstruktorius egzempliorių skaičius&quot;</span><span class="token operator">+</span> kiekObjektuSukureme<span class="token punctuation">)</span><span class="token operator">:</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b={href:"https://vma-test.viko.lt/mod/glossary/showentry.php?eid=32&displayformat=dictionary",title:"Terminų ir santrumpų žodynas: Java",target:"_blank",rel:"noopener noreferrer"},y={href:"https://vma-test.viko.lt/mod/glossary/showentry.php?eid=32&displayformat=dictionary",title:"Terminų ir santrumpų žodynas: Java",target:"_blank",rel:"noopener noreferrer"},g=i(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Skaiciuokle</span><span class="token punctuation">{</span>
  <span class="token keyword">static</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Statinis 1-blokas įvykdytas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
    <span class="token keyword">static</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Statinis 2-blokas įvykdytas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Statinis 3-blokas įvykdytas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Statinis importavimas ir taikymas.</strong> Statinis importavimas yra naudojamas tuo atveju kai, norime naudoti statinius narius: metodus, kintamuosius, konstantas, nenurodant klasės pavadinimo tiesiog kviečiant nuorodant konkretų pavadinimą kaip žemiau pateiktame pavyzdyje matome statinius narius importuotus iš klasės Skaiciuokle.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">static_modifikatorius<span class="token punctuation">.</span></span><span class="token class-name">Skaiciuokle</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">static_modifikatorius<span class="token punctuation">.</span></span><span class="token class-name">Skaiciuokle</span><span class="token punctuation">.</span><span class="token static">kiekObjektuSukureme</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">static_modifikatorius<span class="token punctuation">.</span></span><span class="token class-name">Skaiciuokle</span><span class="token punctuation">.</span>skaičiuotiSuma<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StatinisImportavimas</span><span class="token punctuation">{</span>
  <span class="token keyword">void</span> skaiciuoti <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Statinis importas: &quot;</span><span class="token operator">+</span><span class="token constant">KONSTANTA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    skaič<span class="token function">iuotiSuma</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    kiekObjektuSukureme <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pasiekti visus statinius narius iš klasės Klases_pav:</p><p><strong>import static</strong> package-pavadinimas.Klases_pav.*;</p><p>Pasiekti konkretų nurodytą statinį kintamąjį:</p><p><strong>import static</strong> package-pavadinimas.statinis-kintamasis;</p><p>Pasiekti konkretų nurodytą statinį metodą:</p><p><strong>import static</strong> package-pavadinimas.statinis-metodas;</p><p>Vienas iš pavyzdžių būtų Math klasė skirta matematiniams skaičiavimams kadangi rašant tam tikro pobūdžio programas gali prireikti šio statinio importavimo dėl dažno matematinių funkcijų naudojimo, kad nerikėtų kartoti klasės vardo (žr. 1.7 pav.). Bet reikia atsiminti, kad jūsų kodo skaitomumas gali pasidaryti sudėtingesnis kai naudosite <strong>import static.</strong></p><figure><img src="https://github.com/eif-courses/moodle-java/blob/master/staticImport.jpg?raw=true" alt="8 pav. Statinio importavimo palyginimas pavyzdys " tabindex="0" loading="lazy"><figcaption>8 pav. Statinio importavimo palyginimas pavyzdys </figcaption></figure><p>1.7 pav. Statinio importavimo palyginimas pavyzdys</p><p>Taigi reikėtu atkreipti dėmesį į tai ar tikrai verta jums naudoti <strong>import static</strong>, priklausomai nuo kreipinių skaičiaus į klasėje realizuotus klasės narius, su kuriais dirbsime.</p>`,13),j=s("strong",null,"Static tipo klasės struktūra",-1),w={href:"https://vma-test.viko.lt/mod/glossary/showentry.php?eid=32&displayformat=dictionary",title:"Terminų ir santrumpų žodynas: Java",target:"_blank",rel:"noopener noreferrer"},S=i(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Pagrindine</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
  <span class="token keyword">void</span> spausdinti <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// Objekto kurimas kitose klasėse</span>
    <span class="token comment">// jeigu leisime pasiekti iš išorés</span>
    <span class="token class-name">Pagrindine<span class="token punctuation">.</span>Vidine</span> vidine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pagrindine<span class="token punctuation">.</span>Vidine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    vidine<span class="token punctuation">.</span>grazinti <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Tik tuo atveju kai yra kviečiame Tevyněje klaséje</span>
    <span class="token class-name">Vidine</span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vidine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    v<span class="token punctuation">.</span><span class="token function">grazinti_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Vidine</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">grazinti_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> id<span class="token punctuation">;</span><span class="token punctuation">}</span>
                        
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pagrindine klasė turinti id lauką, kurio negalės pasiekti vidinė klasė, kadangi kaip ir įprasta static metodų aprašyme vidinėm klasėm galioja tos pačios taisyklės, kad negalite pasiekti Pagrindine klasės narių, kurie yra nestatiniai neturint klasės objekto egzemplioriaus.</p><p><strong>Static tipo klasės taikymas kuriant Singleton klasę.</strong> Singleton klasės tikslas yra kontroliuoti objekto sukūrimą, apriboti objektų skaičių iki vieno klasės egzemplioriaus. Singleton klasės dažnai naudojamos kontroliuoti resursus prisijungimui prie duomenų bazės, resursų kontrolė. Kadangi Singleton klasė turi tik viena egzempliorių, taigi kiekvienas objekto laukas bus įvykdomas vieną kartą kaip ir static lauko atveju.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonKlase</span><span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token class-name">SingletonKlase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonKlase</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">SingletonKlaseHolder</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SingletonKlaseHolder</span> <span class="token punctuation">(</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">SingletonKlase</span> <span class="token constant">INSTANCE</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonKlase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pavyzdžiui, jus turite licencija vienam prisijungimui prie duomenų bazės, Singleton klasė užtikrins tai, kad tikrai būtų atliktas vienas prisijungimas vienu metu.</p>`,5);function f(h,_){const n=l("ExternalLinkIcon");return p(),o("div",null,[u,k,s("p",null,[a("Konstantos apibrėžimas "),s("a",r,[a("Java"),t(n)]),a(" kalboje: public static final int KONSTANTA; žemiau pateiktame kodo fragmente matome static int bendras; ir int lokalus; kintamojo reikšmės pokytį kviečiant funkciją sk1.sumuoti() ir sk2.sumuoti(), kadangi statiniai kintamieji neturi priklausomybės nuo klasės egzempliorių, jiems yra išskiriama atmintis tik vienam egzemplioriui, kuris yra bendras = sk1.sumuoti() + sk2.sumuoti() = 20;. Naudojant lokalius kintamuosius, kiekvienam klasės egzemplioriui atmintyje yra išskiriama vieta, todėl lokalus = sk1.sumuoti() = 10; ir lokalus = sk2.sumuoti() = 10. O kam skirtas statinis kintamasis kiekObjektuSukureme ir kodėl jo reikšmė yra lygi 2? Kaip reikėtų elgtis jeigu norėtume paskaičiuoti kiek objektų sukūrėme naudojant lokalų kintamąjį?")]),d,s("p",null,[a("Statinis blokas vietoje statinio konstruktoriaus. Kaikurios iš programavimo kalbų turi statinius konstruktorius pvz: C#, kadangi "),s("a",m,[a("Java"),t(n)]),a(" kalboje šis veiksmas nėra leistinas, todėl kad vaikinės klasės negali paveldėti static konstruktorių arba metodų, šiai problemai spręsti yra naudojami statiniai blokai, žemiau pateiktas pavyzdys kaip yra aprašomas statinis blokas, taip pat reikia žinoti jog šis blokas yra įkraunamas į atmintį ir bus įvykdomas visada pirmas tada kai tik bus sukurtas klasės objektas, kurioje yra apibrėžtas šis statinis blokas.")]),v,s("p",null,[a("Statinių blokų naudojimas yra reikalingas tuo atveju kai jus norite pakeisti statinių kintamųjų reikšmes pagal nutylėjimą (angl. default values). Šis static blokas yra įvykdomas tada kai pvz: turime klasę Skaiciuokle yra įkraunama į atmintį, pavyzdžiui bus sukuriamas naujas objektas Skaiciuokle skaiciuokle = new Skaiciuokle(); static blokas bus įvykdomas pirmas prieš konstruktorių vykdymą, žvelgiant į pavyzdį visada bus išspausdinimas tekstas „Statinis blokas įvykdytas“, tada tik bus pereinama prie konstruktoriaus vykdymo. Statiniai blokai yra įvykdomi tik vieną kartą kai "),s("a",b,[a("Java"),t(n)]),a(" virtuali mašina įkrauna klasę į atmintį, lyginant su konstruktoriumi, kuris yra vykdomas kiekvieną kartą kai yra sukuriamas klasės egzempliorius. Kiekviena klasė gali turėti ir keletą statinių blokų, kurių seka priklauso nuo eiliškumo kaip juos surašysite, "),s("a",y,[a("Java"),t(n)]),a(" virtuali mašina įkrauna į atmintį apjungus juos tarpusavyje kaip vieną statinį bloką. Šie blokai taip pat vadinami inicijavimo blokai (angl. initialization blocks).")]),g,s("p",null,[j,a(". "),s("a",w,[a("Java"),t(n)]),a(" programavimo kalboje yra tik vieno tipo static klasės, jos vadinamos vidinėmis (angl. Inner). Žemiau esančiame kodo fragmente galite matyti jos realizacija:")]),S])}const K=e(c,[["render",f],["__file","staticfinal.html.vue"]]);export{K as default};
