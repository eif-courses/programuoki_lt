import{ab as a,M as n,N as t,L as s,ac as p}from"./framework-b36c0771.js";const i={},o=s("p",null,"Programose pasitaiko klaidų arba išimtinių situacijų. Į klaidas reikia reaguoti ir jas apdoroti/ištaisyti jeigu įmanoma. Įvairiose programavimo sistemose bei kalbose naudojamos skirtingos klaidų apdorojimo priemonės.",-1),e=s("iframe",{width:"100%",height:"400",src:"https://www.youtube.com/embed/E4LERJkB-AU",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),c=p(`<p>Programavimo kalboje Java yra numatytas klaidų apdorojimo mechanizmas, kuris yra pateiktas 1.10 paveiklslėlyje.</p><figure><img src="https://github.com/eif-courses/moodle-java/blob/master/Exception arba isimtys Java.png?raw=true" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>1.10 pav. Java išimčių apdorojimo mechanizmas klasių hierarchija</p><p>Programavimo kalbos Java išimčių mechanizmas klasifikuojamas į 3 skirtingas klaidų rūšis:</p><ol><li><strong>java.lang.Error</strong> - atsakinga už sistemines klaidas tokias kaip OutOfMemmoryError, StackOverFlowError ir kitas, kurių mes valdyti negalime.</li><li><strong>java.lang.Exception</strong> kontroliuojamos (anlg. checked) išimtininės situacijos, kurias dar galime apdoroti ir leisti toliau programai sėkmingai veikti. Šį tikslą galime pasiekti naudojant <strong>try-catch</strong> bloką.</li><li><strong>java.lang.RuntimeException</strong> nekontroliuojamos (unchecked), situacijom, kurių mes negalime apdoroti, pavyzdžiui programavimo klaidos, nenorime jų gaudyti naudojant <strong>try-catch</strong> bloką, gausime klaidos pranešimą ir programa nuluš, kadangi, tai runtime klaida. Kodėl tokio tipo klaidų apdorojimas egzistuoja? Todėl, kad programuotojui būtų per sunku visur nurodyti try-catch pvz: Turime RuntimeException <em>ArithmeticException</em> jau esančią aprašyta kartu su bet kuria JDK įrankio versija. Turime paprastą aritmetinį veiksmą int i = 10 / 0; jeigu kiekvieną iš jų įdėtume į try-catch bloką tiek ir skaitomumas būtų prastas ir švaistytumė laiką rašant programinį kodą. Turint RuntimeException jeigu ši situacija įvyksta bus išvestas klaidos pranešimas ir programa nuluš.</li></ol><p>Pagrindiniai raktiniai žodžiai reikalingi darbui su klaidų apdorojimo mechanizmu yra pateikti 10 lentelėje. Jie skirti sukurti savo asmenines klases išimtims apdoroti arba naudoti jau numatytas iš anksto, kurios yra pateikiamos su standartiniu JDK arba įvairiomis trečiųjų šalių bibliotekomis.</p><p><strong>9 lentelė.</strong> Klaidų apdorojimo mechanizmo pagrindiniai raktiniai žodžiai</p><table border="”1”"><tr><th>Raktinis žodis</th> <th>Paaiškinimas</th></tr><tr><td><strong>throw</strong></td> <td>Dirbtinis išimties sukėlimas, norint tam tikroje situacijoje iškviesti išimtį. throw new Exception();</td></tr><tr><td><strong>throws</strong></td> <td>Jeigu mes sukeliame dirbtines išimtis ir jų neapdorojame privalome prie metodo nurodyti throws Exception, kurią išimtį mes dirbtinai sukelsime. pvz.: void skaiciuoti() throws Exception {...}</td></tr><tr><td><strong>try-catch</strong></td><td>Išimtinės situacijos apdorojimo blokas try, kuriame yra tikrinamos išimtinės situacijos ir jeigu ji “aptinkama” tada pereinama į catch bloką, kuriame yra apdorojama išimtinė situaciją pagal poreikį informuojant vartotoją arba registruojant log žurnale.</td></tr><tr><td><strong>finnaly</strong></td> <td>Šis blokas naudojamas kartu su try-catch, kuris yra vykdomas nepriklausomai ar išimtinė situacija įvyko ar ne, dažnai naudojam resursų atlaisvinimui, pvz: dokumento uždarymui, duomenų bazės ryšio nutraukimui ir pan.</td></tr></table><br><p><strong>Savo išimčių aprašymas, kam to reikia?</strong></p><ul><li>Daugelis pagal nutylėjimą apibrėžtų išimčių klasių: NullPointerException, ArrayOutOfBoundsException ir t.t., ne visada tenkina mūsų poreikius. Todėl kiekvieną iš projektuojamų sistemų aprašo savo išimčių klases.</li><li>Kiekviena iš naujai apibrėžtų klaidų privalo turėti informatyvų pavadinimą ir baigtis žodžiu Exception, taip pat paveldėti iš tėvinės klasės Exception pvz: public class CourseException extends Exception {}.</li><li><em>CourseException</em> iš esmės nurodo, kuriai klasei priklauso ši išimtis, bet norint konkretizuoti savo klaidą galima papildomai nurodyti tikslesnį pavadinimą pvz: <em>CourseGroupInvalidFormatException.</em> Papildomai informacijai nurodyti naudoti konstruktoriaus parametrą message.</li></ul><p><strong>Kaip sukurti savo išimties klasę kontroliuojamojo tipo?</strong> Tereikia sukurti klasę, kuri paveldi Exception klasę ir sugalvoti metodą su išimtinę situacija. Žemiau pateikiamame kodo fragemnte yra sukurta išimtinė situacija kai kurso pavadinimas yra nenurodytas arba yra per trumpas ir pavadinta <em>KursoZodzioIlgisException</em>.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Kursas</span><span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> pavadinimas<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token class-name">Kursas</span><span class="token punctuation">(</span><span class="token class-name">String</span> pavadinimas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>pavadinimas <span class="token operator">=</span> pavadinimas<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Aprašomas metodas, kuriama gali įvykti išimtinė situacija</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Kursas</span> <span class="token function">surastiKursa</span><span class="token punctuation">(</span><span class="token class-name">String</span> pavadinimas<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KursoZodzioIlgisException</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>pavadinimas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">KursoZodzioIlgisException</span><span class="token punctuation">(</span><span class="token string">&quot;Prašome nurodyti kursą.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>pavadinimas<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">KursoZodzioIlgisException</span><span class="token punctuation">(</span><span class="token string">&quot;Kurso pavadinimas privalo būti nemažiau 5 simbolių ilgio.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Kursas</span><span class="token punctuation">(</span>pavadinimas<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Kursas{&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;pavadinimas=&#39;&quot;</span> <span class="token operator">+</span> pavadinimas <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
        <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// Sukuriama klasė skirta apdoroti išimtinę situaciją susiijusia su kurso pavinimo ilgiu</span>
<span class="token keyword">class</span> <span class="token class-name">KursoZodzioIlgisException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name">KursoZodzioIlgisException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token class-name">KursoZodzioIlgisException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">Kursas</span><span class="token punctuation">.</span><span class="token function">surastiKursa</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KursoZodzioIlgisException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Įvykdžius šį kodo fragmentą pateiktą dokumente <em>exceptions1.java</em> į ekraną bus išvestas klaidos pranešimas. Be abejo vietoj šio pranešimo galima apdorotį įvykūsią išimtinę situaciją ir išspręsti be programos nutraukimo.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>KursoZodzioIlgisException</span><span class="token operator">:</span> <span class="token class-name">Pra</span>šome nurodyti kursą<span class="token punctuation">.</span>
at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>Kursas</span><span class="token punctuation">.</span><span class="token function">surastiKursa</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>
at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>Main</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">37</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Atitinkamai jeigu perduosime žodį pvz: Kursas.surastiKursa(&quot;java&quot;); trumpesnį nei 5 simboliai gausime kitą klaidos pranešimą:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>KursoZodzioIlgisException</span><span class="token operator">:</span> <span class="token class-name">Kurso</span> pavadinimas privalo būti nemažiau <span class="token number">5</span> simbolių ilgio<span class="token punctuation">.</span>
at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>Kursas</span><span class="token punctuation">.</span><span class="token function">surastiKursa</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">15</span><span class="token punctuation">)</span>
at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>Main</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">37</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Įvykdžius žemiau pateiktą programinį kodą pateikta dokumente <em>exceptions2.java</em> bus išvestas klaidos pranešimas, kadangi tai nekontroliuojama išimtinė situacija programa nuluš ir nieko padaryti jau nebegalėsime. Tokios klaidos dažnai yra registruojamos žurnaluose ir vėliau sprendžiamos jeigu tai yra gyvybiškai svarbu. Kartais kenkėjiškas kodas ar sukčiai nori įsibrauti ir pakeisti jūsų sąrašą papildomais skaičiukais ir panašiai. tuo atveju klaida nulauš kodą ir neleis vykti nelegaliems veiksmams. Pati programinė įranga neapdorojusi išimtinių atveju gali sau pakenkti veikti su nenumatytomis reikšmėmis ir pan.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Kursas</span><span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> pavadinimas<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token class-name">Kursas</span><span class="token punctuation">(</span><span class="token class-name">String</span> pavadinimas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>pavadinimas <span class="token operator">=</span> pavadinimas<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPavadinimas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> pavadinimas<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// Sąrašas perpildytas priskiriamas prie nekontroliuojamų klaidų</span>
<span class="token keyword">class</span> <span class="token class-name">SarasasPerpildytasException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name">SarasasPerpildytasException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token class-name">SarasasPerpildytasException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Kursas</span><span class="token punctuation">&gt;</span></span> kursai <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">nCopies</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Kursas</span><span class="token punctuation">(</span><span class="token string">&quot;Java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Užpildome sąrašą 100 kopijų sąrašo elementų</span>
    <span class="token function">uzpildytiKursuSarasa</span><span class="token punctuation">(</span>kursai<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Bandome perduoti 100 sąrašą viršijantį limitą 10 &lt; 100.</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Testinis metodas sukurtai nekontroliuojamai išimčiai perdavūs didesnį sąrašą nei numatyta</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">uzpildytiKursuSarasa</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Kursas</span><span class="token punctuation">&gt;</span></span> kursai<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>kursai<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SarasasPerpildytasException</span><span class="token punctuation">(</span><span class="token string">&quot;Atsiprašome jūs viršijote leistiną kursų kiekį.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">uncheckedEXception<span class="token punctuation">.</span></span>SarasasPerpildytasException</span><span class="token operator">:</span> <span class="token class-name">Atsipra</span>šome jūs viršijote leistiną kursų kiekį<span class="token punctuation">.</span>
at <span class="token class-name"><span class="token namespace">uncheckedEXception<span class="token punctuation">.</span></span>Main</span><span class="token punctuation">.</span><span class="token function">uzpildytiKursuSarasa</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">)</span>
at <span class="token class-name"><span class="token namespace">uncheckedEXception<span class="token punctuation">.</span></span>Main</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">28</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pavyzdys kai galime gaudyti daugiau nei vieną išimtį. Žiūrėti į kodo fragemntą pateiktą <em>exceptions3.java. Šis fragmentas galioja su JDK 1.7 versija, naujesnėse JDK versijose atsirado paprastesnis būdas užrašyti keletą išimčių.</em></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//PASTABA! Klasės nurodytos catch bloke privalo būti išdėstytos nuo žemiausios pagal hierarchiją iki aukščiausios.</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Kursas</span><span class="token punctuation">&gt;</span></span> kursai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">nCopies</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Kursas</span><span class="token punctuation">(</span><span class="token string">&quot;C++&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
   <span class="token class-name">Kursas</span><span class="token punctuation">.</span><span class="token function">surastiKursa</span><span class="token punctuation">(</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">uzpildytiKursuSarasa</span><span class="token punctuation">(</span>kursai<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KursoZodzioIlgisException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SarasasPerpildytasException</span> ee<span class="token punctuation">)</span><span class="token punctuation">{</span>ee<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Prieš tai buvo minėta jog nuo JDK 1.8 atsirado paprastesnis būdas užrašyti keletą išimtinių situacijų viename catch bloke. Šį užrašymo būdą rasite žemiau pateiktame kodo fragmente <em>exceptions4.java</em>.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//PASTABA! Klasės nurodytos catch bloke privalo būti išdėstytos nuo žemiausios pagal hierarchiją iki aukščiausios.</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Kursas</span><span class="token punctuation">&gt;</span></span> kursai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">nCopies</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Kursas</span><span class="token punctuation">(</span><span class="token string">&quot;C++&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
   <span class="token class-name">Kursas</span><span class="token punctuation">.</span><span class="token function">surastiKursa</span><span class="token punctuation">(</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">uzpildytiKursuSarasa</span><span class="token punctuation">(</span>kursai<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KursoZodzioIlgisException</span> <span class="token operator">|</span> <span class="token class-name">SarasasPerpildytasException</span> ee<span class="token punctuation">)</span><span class="token punctuation">{</span>
   ee<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Išimties aprašymas naudojant klaidos kodų lentelę/sąrašą.</strong> Dažnai praverčia sudarytos kodų/trumpinių klaidų lentelės taip parasčiau galima sudaryti dokumentaciją arba sugrupuoti klaidas ir atitinkamai pagal klaidos perduotą tekstą į ją sureguoti atitinkamai. Žemiau yra pateikiamas pavyzdys exceptions5.java dokumente kaip susikurti savo asmeninę klaidų kodų lentelę programiškai.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">KursuKlaiduSablonasException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">4664456874499611218L</span><span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> klaidosKodas <span class="token operator">=</span> <span class="token string">&quot;Nežinoma klaida&quot;</span><span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token class-name">KursuKlaiduSablonasException</span><span class="token punctuation">(</span><span class="token class-name">String</span> zinute<span class="token punctuation">,</span> <span class="token class-name">String</span> klaidosKodas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">super</span><span class="token punctuation">(</span>zinute<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>klaidosKodas <span class="token operator">=</span> klaidosKodas<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">gautiKlaidosKoda</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> klaidosKodas<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">klaiduKoduSablonas</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KursuKlaiduSablonasException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">gautiKlaidosKoda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
    <span class="token comment">// Išimties aprašymas naudojant klaidos kodų sąrašą</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">tikrintiKokiaKlaidaIvykoPagalKlaiduLentele</span><span class="token punctuation">(</span><span class="token class-name">KursuKlaiduSablonasException</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KursuKlaiduSablonasException</span> <span class="token punctuation">{</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">gautiKlaidosKoda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&quot;TUSCIAS_SABLONAS_KLAIDA&quot;</span><span class="token operator">:</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Privalote nurodyti šabloną: {minimum 1 simbolis}.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;SKAICIUS_NELEISTINAS_KLAIDA&quot;</span><span class="token operator">:</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Skaiciaus nurodyti negalima.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;SKAICIU_RAIDZIU_KOMBINACIJA_KLAIDA&quot;</span><span class="token operator">:</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Skaiciai ir raides negali buti kartu kombinuojamos.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nezinoma klaida kurios apdoroti negalima&quot;</span><span class="token operator">+</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">klaiduKoduSablonas</span><span class="token punctuation">(</span><span class="token class-name">String</span> pattern<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KursuKlaiduSablonasException</span><span class="token punctuation">{</span>
      <span class="token keyword">try</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">KursuKlaiduSablonasException</span><span class="token punctuation">(</span><span class="token string">&quot;Tuščias šablobas&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TUSCIAS_SABLONAS_KLAIDA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">KursuKlaiduSablonasException</span><span class="token punctuation">(</span><span class="token string">&quot;Skaicius yra neleistinas&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;SKAICIUS_NELEISTINAS_KLAIDA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KursuKlaiduSablonasException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">tikrintiKokiaKlaidaIvykoPagalKlaiduLentele</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Įvykdžius exceptions5.java dokumentą bus išvestas pranešimas apie klaidą ir pateikiamas klaidos kodas esant poreikiui:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Privalote</span> nurodyti šabloną<span class="token operator">:</span> <span class="token punctuation">{</span>minimum <span class="token number">1</span> simbolis<span class="token punctuation">}</span><span class="token punctuation">.</span>
<span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>PaskutinisExceptionSUERROR<span class="token punctuation">.</span>KursuKlaiduSablonasException</span><span class="token operator">:</span> <span class="token class-name">Tu</span>ščias šablobas
at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>PaskutinisExceptionSUERROR<span class="token punctuation">.</span>Main</span><span class="token punctuation">.</span><span class="token function">klaiduKoduSablonas</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">)</span>
at <span class="token class-name"><span class="token namespace">exception<span class="token punctuation">.</span>klases<span class="token punctuation">.</span>pavyzdys<span class="token punctuation">.</span></span>PaskutinisExceptionSUERROR<span class="token punctuation">.</span>Main</span><span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">19</span><span class="token punctuation">)</span>
<span class="token constant">TUSCIAS_SABLONAS_KLAIDA</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Išimčių apdorojimo mechanizmo geriausios praktikos:</strong></p><ol><li><p><strong>Patartina naudoti specifines klaidų klases.</strong> Kurios būtų informatyvios, kadangi Java kalboje yra labai daug išimčių klasių, kurios išsiskaido į poklases, patartina naudoti klasę artimiausią jūsų išimčiai atitinkančią, kad būtų lengvesnis derinimo rėžimas (debugging).</p></li><li><p><strong>Kuo greičiau sukelti išimtinę situaciją.</strong> Metodas kuriame yra gaudoma išimtis privalo būti aprašoma, kuo anksčiau try bloke.</p></li><li><p><strong>Informuoti vartotoja apie įvykūsią klaidą.</strong> Kartais kurėjai išimtines situacijas gaudant jas registruoja žurnale (angl. log) ir apie jas neinfromuoja vartotojo. Visos klaidos privalo būti gaudomos tik tada kai mes galime jas apdoroti catch bloke.</p></li><li><p><strong>Resursų atlaisvinimas.</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Resursų atlaisvinimas nuo JDK 1.7+ versijos.</span>
<span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> br <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//  Resursų atlaisvinimas ankstesnėse nei JDK 1.7 versijose.</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>br <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Registruoti įvykusias išimtines situacijas.</strong> Visada privalome kaupti išimčių informaciją, taip pat privalome vartotoją informuoti aiškia žinute ką jam reikėtų atlikti, taip negalime palikti tuščių catch blokų nes derinimo rėžimo metu nesuprasime kokios išimtinės situacijos įvyko ir kas už tai atsakingas.</p></li><li><p><strong>Naudoti atnaujintą kodą.</strong> Nuo Java 1.7 versijos patartina naudoti vieną bloką, kuriame yra aprašomos kelios klaidos taip supaprastinant kodo skaitomumą.</p></li><li><p><strong>Naudoti savo sukurtas klaidų klases su kodų lentelėmis.</strong> Visada geriau numatyti klaidų apdorojimo strategiją vietoj keletos išimčių gaudymo. Mes galime aprašyti išimties klasę, kuri apdoroja klaidų kodus (error code) taigi programa, kuri naudojasi šia klase galės perduoti šiuos klaidų kodus. Taip pat gera idėja sukurti Utility metodą, kuris apdoroja skirtingas klaidas ir panaudoti jį.</p></li><li><p><strong>Pasirinkti tinkamus katalogų ir klasių pavadinimus.</strong> Prie kiekvienos klasės skirtos išimčiai aprašyti gale pavadinimo pridėti prierašą: Exception, RuntimeException. Taip pat išlaikyti package vardus pvz: kaip Java JDK IOException visoms IO operacijoms.</p></li><li><p><strong>Elgtis atsakingai su Exception naudojimu.</strong> Vengti situacijų kada išimtys yra neprivalomos geriau jų nenaudoti, jeigu pakanka kintamojo boolean, kuris gali gražinti būseną apie sėkmingą, nesėkmingą operaciją. Šis būdas naudingas kai nenorime, kad programa užstrigtu kai ji nustoja veikti. Vienas iš pavyzdžių mes nenorime kad mum iškviestų išimtį kai bandome jungtis ir nepavyksta prisijungti, užtenka kad gražintu būseną 0 arba 1.</p></li><li><p><strong>Dokumentuoti naudoti Java Docs komentarus.</strong> Naudoti javadocs <strong>@throws</strong>, kur detaliai aprašoma informacija apie išimtis, kurios yra sukeliamos naudojant šį metodą. Tai yra labai naudinga kai jūs pateikiate detalią dokumentaciją kitoms aplikacijoms paprasčiau naudotis.</p></li></ol>`,30),l=[o,e,c];function u(k,r){return n(),t("div",null,l)}const m=a(i,[["render",u],["__file","isimtys.html.vue"]]);export{m as default};
