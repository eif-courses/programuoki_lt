const a=JSON.parse('{"key":"v-0cc1966f","path":"/java/parametrizuoti.html","title":"Parametrizuoti tipai","lang":"en-US","frontmatter":{"title":"Parametrizuoti tipai","author":"M.Gžegoževskis","time":"2021-10-01T00:00:00.000Z","category":["Java"],"tag":["Programavimas","Java"],"sticky":true,"star":true,"footer":"MIT Licensed | Copyright © 2021-present M. Gzegozevskis","description":"Parametrizuoti tipai netik supaprastina programų šabloninių klasių, kūrimo, bet ir atveria galimybė rašyti universalesnį programinį kodą. Tarkim turite Java kolekciją į kurią norite talpinti tam tikro tipo objektus. Jeigu toje kolekcijoje atsiranda netinkamas elementas kompiliatorius nepraneša apie klaidą nes kolekcijoje galima talpinti bet kokio tipo Object elementus. Taigi iki 1.5 JDK naudojamas \\"raw\\" tipas sukeldavo begalė problemų konvertuojant objektą iš esamos kolekcijos JVM vykdymo metu gaunant klaidos pranešimą ClassCastException. Taip pat įvedus parametrizuotus tipus nuo 1.5 JDK atvertos šios galimybės:","head":[["meta",{"property":"og:url","content":"https://www.programuoki.lt/java/parametrizuoti.html"}],["meta",{"property":"og:site_name","content":"Programuoki.lt"}],["meta",{"property":"og:title","content":"Parametrizuoti tipai"}],["meta",{"property":"og:description","content":"Parametrizuoti tipai netik supaprastina programų šabloninių klasių, kūrimo, bet ir atveria galimybė rašyti universalesnį programinį kodą. Tarkim turite Java kolekciją į kurią norite talpinti tam tikro tipo objektus. Jeigu toje kolekcijoje atsiranda netinkamas elementas kompiliatorius nepraneša apie klaidą nes kolekcijoje galima talpinti bet kokio tipo Object elementus. Taigi iki 1.5 JDK naudojamas \\"raw\\" tipas sukeldavo begalė problemų konvertuojant objektą iš esamos kolekcijos JVM vykdymo metu gaunant klaidos pranešimą ClassCastException. Taip pat įvedus parametrizuotus tipus nuo 1.5 JDK atvertos šios galimybės:"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"M.Gžegoževskis"}],["meta",{"property":"article:tag","content":"Programavimas"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2021-10-01T00:00:00.000Z"}]]},"headers":[{"level":3,"title":"Apribojimas Nr. 1.","slug":"apribojimas-nr-1","link":"#apribojimas-nr-1","children":[]},{"level":3,"title":"Apbribojimas Nr. 2.","slug":"apbribojimas-nr-2","link":"#apbribojimas-nr-2","children":[]},{"level":3,"title":"Apribojimas Nr. 3.","slug":"apribojimas-nr-3","link":"#apribojimas-nr-3","children":[]},{"level":3,"title":"Daugiau apribojimų.","slug":"daugiau-apribojimu","link":"#daugiau-apribojimu","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":7.24,"words":2172},"filePathRelative":"java/parametrizuoti.md","excerpt":"<p>Parametrizuoti tipai netik supaprastina programų šabloninių klasių, kūrimo, bet ir atveria galimybė rašyti universalesnį programinį kodą. Tarkim turite Java kolekciją į kurią norite talpinti tam tikro tipo objektus. Jeigu toje kolekcijoje atsiranda netinkamas elementas kompiliatorius nepraneša apie klaidą nes kolekcijoje galima talpinti bet kokio tipo Object elementus.\\nTaigi iki 1.5 JDK naudojamas \\"raw\\" tipas sukeldavo begalė problemų konvertuojant objektą iš esamos kolekcijos JVM vykdymo metu gaunant klaidos pranešimą ClassCastException. Taip pat įvedus parametrizuotus tipus nuo 1.5 JDK atvertos šios galimybės:</p>","autoDesc":true}');export{a as data};
